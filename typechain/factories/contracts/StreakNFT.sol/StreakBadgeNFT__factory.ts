/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StreakBadgeNFT,
  StreakBadgeNFTInterface,
} from "../../../contracts/StreakNFT.sol/StreakBadgeNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MILESTONE_30",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MILESTONE_50",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "badgesClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "streak",
        type: "uint256",
      },
    ],
    name: "mintBadge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "streak",
        type: "uint256",
      },
    ],
    name: "tokenURIForStreak",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280600b81526020017f53747265616b42616467650000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5354420000000000000000000000000000000000000000000000000000000000815250816000908162000090919062000472565b508060019081620000a2919062000472565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011a5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200011191906200059e565b60405180910390fd5b6200012b816200013260201b60201c565b50620005bb565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027a57607f821691505b60208210810362000290576200028f62000232565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002bb565b620003068683620002bb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003536200034d62000347846200031e565b62000328565b6200031e565b9050919050565b6000819050919050565b6200036f8362000332565b620003876200037e826200035a565b848454620002c8565b825550505050565b600090565b6200039e6200038f565b620003ab81848462000364565b505050565b5b81811015620003d357620003c760008262000394565b600181019050620003b1565b5050565b601f8211156200042257620003ec8162000296565b620003f784620002ab565b8101602085101562000407578190505b6200041f6200041685620002ab565b830182620003b0565b50505b505050565b600082821c905092915050565b6000620004476000198460080262000427565b1980831691505092915050565b600062000462838362000434565b9150826002028217905092915050565b6200047d82620001f8565b67ffffffffffffffff81111562000499576200049862000203565b5b620004a5825462000261565b620004b2828285620003d7565b600060209050601f831160018114620004ea5760008415620004d5578287015190505b620004e1858262000454565b86555062000551565b601f198416620004fa8662000296565b60005b828110156200052457848901518255600182019150602085019450602081019050620004fd565b8683101562000544578489015162000540601f89168262000434565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005868262000559565b9050919050565b620005988162000579565b82525050565b6000602082019050620005b560008301846200058d565b92915050565b6128f980620005cb6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063b88d4fde1161007c578063b88d4fde14610377578063c87b56dd14610393578063e42bff66146103c3578063e985e9c5146103df578063eb06275c1461040f578063f2fde38b1461042d57610142565b8063715018a6146102f757806375794a3c146103015780638da5cb5b1461031f57806395d89b411461033d578063a22cb4651461035b57610142565b806323b872dd1161010a57806323b872dd146102115780632a8d3f531461022d57806342842e0e1461024b5780636352211e14610267578063651aa5a21461029757806370a08231146102c757610142565b806301ffc9a71461014757806306fdde0314610177578063081812fc14610195578063095ea7b3146101c55780631d86c7fc146101e1575b600080fd5b610161600480360381019061015c9190611d76565b610449565b60405161016e9190611dbe565b60405180910390f35b61017f6104aa565b60405161018c9190611e69565b60405180910390f35b6101af60048036038101906101aa9190611ec1565b61053c565b6040516101bc9190611f2f565b60405180910390f35b6101df60048036038101906101da9190611f76565b610558565b005b6101fb60048036038101906101f69190611fb6565b61056e565b6040516102089190611ff2565b60405180910390f35b61022b6004803603810190610226919061200d565b610586565b005b610235610688565b6040516102429190611ff2565b60405180910390f35b6102656004803603810190610260919061200d565b61068d565b005b610281600480360381019061027c9190611ec1565b6106ad565b60405161028e9190611f2f565b60405180910390f35b6102b160048036038101906102ac9190611ec1565b6106bf565b6040516102be9190611e69565b60405180910390f35b6102e160048036038101906102dc9190611fb6565b610744565b6040516102ee9190611ff2565b60405180910390f35b6102ff6107fe565b005b610309610812565b6040516103169190611ff2565b60405180910390f35b610327610818565b6040516103349190611f2f565b60405180910390f35b610345610842565b6040516103529190611e69565b60405180910390f35b6103756004803603810190610370919061208c565b6108d4565b005b610391600480360381019061038c9190612201565b6108ea565b005b6103ad60048036038101906103a89190611ec1565b61090f565b6040516103ba9190611e69565b60405180910390f35b6103dd60048036038101906103d89190611f76565b610a22565b005b6103f960048036038101906103f49190612284565b610b7a565b6040516104069190611dbe565b60405180910390f35b610417610c0e565b6040516104249190611ff2565b60405180910390f35b61044760048036038101906104429190611fb6565b610c13565b005b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104a357506104a282610c99565b5b9050919050565b6060600080546104b9906122f3565b80601f01602080910402602001604051908101604052809291908181526020018280546104e5906122f3565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b5050505050905090565b600061054782610d7b565b5061055182610e03565b9050919050565b61056a8282610565610e40565b610e48565b5050565b60096020528060005260406000206000915090505481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105f85760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105ef9190611f2f565b60405180910390fd5b600061060c8383610607610e40565b610e5a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610682578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161067993929190612324565b60405180910390fd5b50505050565b603281565b6106a8838383604051806020016040528060008152506108ea565b505050565b60006106b882610d7b565b9050919050565b6060601e8203610706576040518060400160405280601781526020017f697066733a2f2f516d2e2e2e2f33306461792e6a736f6e000000000000000000815250905061073f565b6040518060400160405280601781526020017f697066733a2f2f516d2e2e2e2f35306461792e6a736f6e00000000000000000081525090505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107b75760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107ae9190611f2f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610806611074565b61081060006110fb565b565b60085481565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610851906122f3565b80601f016020809104026020016040519081016040528092919081815260200182805461087d906122f3565b80156108ca5780601f1061089f576101008083540402835291602001916108ca565b820191906000526020600020905b8154815290600101906020018083116108ad57829003601f168201915b5050505050905090565b6108e66108df610e40565b83836111c1565b5050565b6108f5848484610586565b610909610900610e40565b85858585611330565b50505050565b606061091a82610d7b565b50600060066000848152602001908152602001600020805461093b906122f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610967906122f3565b80156109b45780601f10610989576101008083540402835291602001916109b4565b820191906000526020600020905b81548152906001019060200180831161099757829003601f168201915b5050505050905060006109c56114e1565b905060008151036109da578192505050610a1d565b600082511115610a0f5780826040516020016109f7929190612397565b60405160208183030381529060405292505050610a1d565b610a18846114f8565b925050505b919050565b610a2a611074565b601e811480610a395750603281145b610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f90612407565b60405180910390fd5b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610afa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af190612473565b60405180910390fd5b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060086000815480929190610b53906124c2565b919050559050610b638382611561565b610b7581610b70846106bf565b61157f565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b601e81565b610c1b611074565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c8d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c849190611f2f565b60405180910390fd5b610c96816110fb565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d6457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610d745750610d73826115db565b5b9050919050565b600080610d8783611645565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dfa57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610df19190611ff2565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610e558383836001611682565b505050565b600080610e6684611645565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ea857610ea7818486611847565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f3957610eea600085600080611682565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610fbc576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61107c610e40565b73ffffffffffffffffffffffffffffffffffffffff1661109a610818565b73ffffffffffffffffffffffffffffffffffffffff16146110f9576110bd610e40565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110f09190611f2f565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361123257816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016112299190611f2f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113239190611dbe565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156114da578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161138f949392919061255f565b6020604051808303816000875af19250505080156113cb57506040513d601f19601f820116820180604052508101906113c891906125c0565b60015b61144f573d80600081146113fb576040519150601f19603f3d011682016040523d82523d6000602084013e611400565b606091505b50600081510361144757836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161143e9190611f2f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114d857836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114cf9190611f2f565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b606061150382610d7b565b50600061150e6114e1565b9050600081511161152e5760405180602001604052806000815250611559565b806115388461190b565b604051602001611549929190612397565b6040516020818303038152906040525b915050919050565b61157b8282604051806020016040528060008152506119d9565b5050565b8060066000848152602001908152602001600020908161159f9190612799565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516115cf9190611ff2565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806116bb5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156117ef5760006116cb84610d7b565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561173657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561174957506117478184610b7a565b155b1561178b57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016117829190611f2f565b60405180910390fd5b81156117ed57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118528383836119fd565b61190657600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118c757806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016118be9190611ff2565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016118fd92919061286b565b60405180910390fd5b505050565b60606000600161191a84611abe565b01905060008167ffffffffffffffff811115611939576119386120d6565b5b6040519080825280601f01601f19166020018201604052801561196b5781602001600182028036833780820191505090505b509050600082602001820190505b6001156119ce578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816119c2576119c1612894565b5b04945060008503611979575b819350505050919050565b6119e38383611c11565b6119f86119ee610e40565b6000858585611330565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611ab557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a765750611a758484610b7a565b5b80611ab457508273ffffffffffffffffffffffffffffffffffffffff16611a9c83610e03565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b1c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b1257611b11612894565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b59576d04ee2d6d415b85acef81000000008381611b4f57611b4e612894565b5b0492506020810190505b662386f26fc100008310611b8857662386f26fc100008381611b7e57611b7d612894565b5b0492506010810190505b6305f5e1008310611bb1576305f5e1008381611ba757611ba6612894565b5b0492506008810190505b6127108310611bd6576127108381611bcc57611bcb612894565b5b0492506004810190505b60648310611bf95760648381611bef57611bee612894565b5b0492506002810190505b600a8310611c08576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c835760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c7a9190611f2f565b60405180910390fd5b6000611c9183836000610e5a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611d055760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611cfc9190611f2f565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d5381611d1e565b8114611d5e57600080fd5b50565b600081359050611d7081611d4a565b92915050565b600060208284031215611d8c57611d8b611d14565b5b6000611d9a84828501611d61565b91505092915050565b60008115159050919050565b611db881611da3565b82525050565b6000602082019050611dd36000830184611daf565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e13578082015181840152602081019050611df8565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e3b82611dd9565b611e458185611de4565b9350611e55818560208601611df5565b611e5e81611e1f565b840191505092915050565b60006020820190508181036000830152611e838184611e30565b905092915050565b6000819050919050565b611e9e81611e8b565b8114611ea957600080fd5b50565b600081359050611ebb81611e95565b92915050565b600060208284031215611ed757611ed6611d14565b5b6000611ee584828501611eac565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f1982611eee565b9050919050565b611f2981611f0e565b82525050565b6000602082019050611f446000830184611f20565b92915050565b611f5381611f0e565b8114611f5e57600080fd5b50565b600081359050611f7081611f4a565b92915050565b60008060408385031215611f8d57611f8c611d14565b5b6000611f9b85828601611f61565b9250506020611fac85828601611eac565b9150509250929050565b600060208284031215611fcc57611fcb611d14565b5b6000611fda84828501611f61565b91505092915050565b611fec81611e8b565b82525050565b60006020820190506120076000830184611fe3565b92915050565b60008060006060848603121561202657612025611d14565b5b600061203486828701611f61565b935050602061204586828701611f61565b925050604061205686828701611eac565b9150509250925092565b61206981611da3565b811461207457600080fd5b50565b60008135905061208681612060565b92915050565b600080604083850312156120a3576120a2611d14565b5b60006120b185828601611f61565b92505060206120c285828601612077565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61210e82611e1f565b810181811067ffffffffffffffff8211171561212d5761212c6120d6565b5b80604052505050565b6000612140611d0a565b905061214c8282612105565b919050565b600067ffffffffffffffff82111561216c5761216b6120d6565b5b61217582611e1f565b9050602081019050919050565b82818337600083830152505050565b60006121a461219f84612151565b612136565b9050828152602081018484840111156121c0576121bf6120d1565b5b6121cb848285612182565b509392505050565b600082601f8301126121e8576121e76120cc565b5b81356121f8848260208601612191565b91505092915050565b6000806000806080858703121561221b5761221a611d14565b5b600061222987828801611f61565b945050602061223a87828801611f61565b935050604061224b87828801611eac565b925050606085013567ffffffffffffffff81111561226c5761226b611d19565b5b612278878288016121d3565b91505092959194509250565b6000806040838503121561229b5761229a611d14565b5b60006122a985828601611f61565b92505060206122ba85828601611f61565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061230b57607f821691505b60208210810361231e5761231d6122c4565b5b50919050565b60006060820190506123396000830186611f20565b6123466020830185611fe3565b6123536040830184611f20565b949350505050565b600081905092915050565b600061237182611dd9565b61237b818561235b565b935061238b818560208601611df5565b80840191505092915050565b60006123a38285612366565b91506123af8284612366565b91508190509392505050565b7f496e76616c6964206d696c6573746f6e65000000000000000000000000000000600082015250565b60006123f1601183611de4565b91506123fc826123bb565b602082019050919050565b60006020820190508181036000830152612420816123e4565b9050919050565b7f426164676520616c726561647920636c61696d65640000000000000000000000600082015250565b600061245d601583611de4565b915061246882612427565b602082019050919050565b6000602082019050818103600083015261248c81612450565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006124cd82611e8b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124ff576124fe612493565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60006125318261250a565b61253b8185612515565b935061254b818560208601611df5565b61255481611e1f565b840191505092915050565b60006080820190506125746000830187611f20565b6125816020830186611f20565b61258e6040830185611fe3565b81810360608301526125a08184612526565b905095945050505050565b6000815190506125ba81611d4a565b92915050565b6000602082840312156125d6576125d5611d14565b5b60006125e4848285016125ab565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261264f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612612565b6126598683612612565b95508019841693508086168417925050509392505050565b6000819050919050565b600061269661269161268c84611e8b565b612671565b611e8b565b9050919050565b6000819050919050565b6126b08361267b565b6126c46126bc8261269d565b84845461261f565b825550505050565b600090565b6126d96126cc565b6126e48184846126a7565b505050565b5b81811015612708576126fd6000826126d1565b6001810190506126ea565b5050565b601f82111561274d5761271e816125ed565b61272784612602565b81016020851015612736578190505b61274a61274285612602565b8301826126e9565b50505b505050565b600082821c905092915050565b600061277060001984600802612752565b1980831691505092915050565b6000612789838361275f565b9150826002028217905092915050565b6127a282611dd9565b67ffffffffffffffff8111156127bb576127ba6120d6565b5b6127c582546122f3565b6127d082828561270c565b600060209050601f83116001811461280357600084156127f1578287015190505b6127fb858261277d565b865550612863565b601f198416612811866125ed565b60005b8281101561283957848901518255600182019150602085019450602081019050612814565b868310156128565784890151612852601f89168261275f565b8355505b6001600288020188555050505b505050505050565b60006040820190506128806000830185611f20565b61288d6020830184611fe3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220e0ceaacb407ffe3b473075b4174f7f4d5c3fec9bcddbb8e3698b001ac98e38a264736f6c63430008140033";

type StreakBadgeNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StreakBadgeNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StreakBadgeNFT__factory extends ContractFactory {
  constructor(...args: StreakBadgeNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<StreakBadgeNFT> {
    return super.deploy(overrides || {}) as Promise<StreakBadgeNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StreakBadgeNFT {
    return super.attach(address) as StreakBadgeNFT;
  }
  override connect(signer: Signer): StreakBadgeNFT__factory {
    return super.connect(signer) as StreakBadgeNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StreakBadgeNFTInterface {
    return new utils.Interface(_abi) as StreakBadgeNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StreakBadgeNFT {
    return new Contract(address, _abi, signerOrProvider) as StreakBadgeNFT;
  }
}
